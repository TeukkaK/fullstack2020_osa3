{"version":3,"sources":["components/Person.js","components/Persons.js","components/Addperson.js","services/service.js","components/Notification.js","App.js","index.js"],"names":["Person","props","name","number","onClick","handleDeletePerson","Persons","persons","filter","person","toLowerCase","includes","map","key","id","Addperson","onSubmit","addPerson","value","newName","onChange","nameChange","newNumber","numberChange","type","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","Filter","handleFilter","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","errorMessage","setErrorMessage","useEffect","service","initialData","showMessage","newMessage","standard","setTimeout","event","target","preventDefault","window","confirm","personToUpdate","find","updatedPerson","catch","error","personObject","length","Math","random","concat","selectedPerson","remainingPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a5a7007.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = (props) => {\r\n    return(\r\n        <div>\r\n            {props.name}    {props.number}\r\n\t\t\t<button onClick={props.handleDeletePerson}>delete</button>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\n\r\nexport default Person;","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = (props) => {\r\n    const filteredPersons = () => props.persons.filter(person =>\r\n        person.name.toLowerCase().includes(props.filter.toLowerCase()));\r\n    \r\n    const rows = () => filteredPersons().map(person =>\r\n        <Person\r\n            key={person.id}\r\n            name={person.name}\r\n            number={person.number}\r\n            handleDeletePerson={() => {props.handleDeletePerson(person.id)}}  \r\n        />\r\n    )\r\n\r\n    return (\r\n        rows()\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Addperson = (props) => {\r\n    return(\r\n        <form onSubmit={props.addPerson}>\r\n           <div>\r\n              name: <input value={props.newName} onChange={props.nameChange}/>\r\n              number: <input value={props.newNumber} onChange={props.numberChange}/>\r\n            </div>\r\n            <div>\r\n               <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Addperson;","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.get(baseUrl).then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.post(baseUrl, newObject).then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`).then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, deletePerson }","import React from 'react'\r\n\r\nconst Notification = ({ message, type }) => {\r\n    if (message === null) {\r\n        return null\r\n    } else {\r\n        return (\r\n            <div className={type}>\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Addperson from './components/Addperson'\nimport service from './services/service'\nimport Notification from './components/Notification'\nimport './index.css'\n\nconst Filter = (props) => {\n    return (\n        <form>\n          <div>\n              filter shown with<input value={props.filter}\n            onChange={props.handleFilter} /></div>\n      </form>\n    )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ filter, setFilter] = useState('')\n  const [message, setMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  \n  const filteredPersons = () => persons.filter(person =>\n        person.name.toLowerCase().includes(filter.toLowerCase()))\n\t\n\t\n  useEffect(() => {\n\t  service\n        .getAll()\n        .then(initialData => {\n           setPersons(initialData)\n        })\n  }, [])\n  \n \n  const handleFilter = (event) => setFilter(event.target.value)\n  \n  const nameChange = (event) => setNewName(event.target.value)\n\n  const numberChange = (event) => setNewNumber(event.target.value)\n  \n  const addPerson = (event) => {\n    event.preventDefault()\n\tconst namelist = persons.map(person => (person.name))\n        if (namelist.includes(newName)) {\n            if (window.confirm(`${newName}` + ' is already added to phonebook' + '\\n' +\n                'replace the old number with new one?')) {\n                const personToUpdate = persons.find(person => person.name === newName)\n                const updatedPerson = { ...personToUpdate, number: newNumber }\n                service.update(personToUpdate.id, updatedPerson)\n                    .then(response => {\n                        showMessage(`Updated number of ${updatedPerson.name}`, true)\n                    })\n                    .catch(error => {\n                        showMessage(`Information of ${newName} has already been removed from server`, false)\n                    })\n            }\n            service.getAll()\n                .then(initialData => {\n                    setPersons(initialData)\n                })\n        } else {\n            const personObject = {\n                name: newName,\n                number: newNumber,\n                id: persons.length + 1 + Math.random(),\n            }\n            service\n                .create(personObject)\n                .then(response => {\n                    setPersons(persons.concat(personObject))\n                    showMessage(`Added ${personObject.name}`, true)\n                })\n        }\n        setNewName('')\n        setNewNumber('')\n    }\n\t\n\tconst handleDeletePerson = id => {\n        const selectedPerson = persons.filter(person => person.id === id)\n        if (window.confirm(`Really delete ${selectedPerson[0].name}?`)) {\n            service.deletePerson(id)\n            const remainingPersons = persons.filter(person => person.id !== id)\n            setPersons(remainingPersons)\n            showMessage(`Deleted ${selectedPerson[0].name}`, true)\n        }\n    }\n  \n  \n  const showMessage = (newMessage, standard) => {\n        if (standard) {\n            setMessage(newMessage)\n            setTimeout(() => {\n                setMessage(null)\n            }, 5000)\n        } else {\n            setErrorMessage(newMessage)\n            setTimeout(() => {\n                setErrorMessage(null)\n            }, 5000)\n        }\n    }\n   \n   \n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\t   <Notification message={message} type={\"message\"} />\n       <Notification message={errorMessage} type={\"error\"} />\n       <Filter filter={filter} handleFilter={handleFilter} />\n\t\t<h3>Add a new</h3>\n        <Addperson addPerson={addPerson} newName={newName} nameChange={nameChange}\n        newNumber={newNumber} numberChange={numberChange} />\n\t\t<h3>Numbers</h3>\n        <Persons persons={filteredPersons()} filter={filter} handleDeletePerson={handleDeletePerson} />\n    </div>\n  )\n\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}